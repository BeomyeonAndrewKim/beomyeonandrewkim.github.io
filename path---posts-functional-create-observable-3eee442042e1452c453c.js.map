{"version":3,"sources":["webpack:///path---posts-functional-create-observable-3eee442042e1452c453c.js","webpack:///./.cache/json/posts-functional-create-observable.json"],"names":["webpackJsonp","537","module","exports","data","site","siteMetadata","title","subtitle","copyright","author","name","email","instagram","linkedin","github","rss","facebook","disqusShortname","url","markdownRemark","id","html","fields","tagSlugs","frontmatter","tags","date","description","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,cAAAC,SAAA,6IAAAC,UAAA,mCAAAC,QAAuOC,KAAA,KAAAC,MAAA,oBAAAC,UAAA,gBAAAC,SAAA,yBAAAC,OAAA,oBAAAC,IAAA,WAAAC,SAAA,WAA2KC,gBAAA,oBAAAC,IAAA,wCAAoFC,gBAAmBC,GAAA,+JAAAC,KAAA;AAAk63CC,QAAoIC,UAAA,0DAAqEC,aAAgBlB,MAAA,kCAAAmB,MAAA,kCAAAC,KAAA,2BAAAC,YAAA,yCAA4KC,aAAgBC,KAAA","file":"path---posts-functional-create-observable-3eee442042e1452c453c.js","sourcesContent":["webpackJsonp([106592666276714],{\n\n/***/ 537:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"BK's Devlog\",\"subtitle\":\"I'm front-end web developer, former brand marketer, interested in business-oriented and scalable development. Also, passionate marathoner.\",\"copyright\":\"powerd by Gatsby, theme by lumen\",\"author\":{\"name\":\"BK\",\"email\":\"beom911@gmail.com\",\"instagram\":\"kim.andrea.by\",\"linkedin\":\"beomyeon-kim-a9b453128\",\"github\":\"beomyeonandrewkim\",\"rss\":\"/rss.xml\",\"facebook\":\"beom911\"},\"disqusShortname\":\"beomyeonandrewkim\",\"url\":\"https://beomyeonandrewkim.github.io\"}},\"markdownRemark\":{\"id\":\"/Users/beomyeonandreakim/Documents/dev/beomyeonandrewkim.github.io/src/pages/articles/2021-05-05_make-observable/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Chapter 02 Observable 만들기</h1>\\n<h2>1.1 Observable 생성자를 이용하여 Observable 만들기</h2>\\n<ul>\\n<li>Observable은 클래스이기에 new 키워드를 객체 생성</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Observable.create도 가능</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span></code></pre>\\n      </div>\\n<h2>1.2 Observable 구현 시 고련해야 할 것들</h2>\\n<ul>\\n<li>\\n<p>Observable은 자신을 구독하고 있는 Observer에게 데이터를 전달하기도 하지만 지금의 상태를 전달하기도 해야함</p>\\n</li>\\n<li>\\n<p>에러가 발생한 경우라면 발생한 에러 정보를 전달하고 데이터를 종료되었다고 하면 데이터 전달이 완료되었다고 Observer에게 전달해야 함.</p>\\n</li>\\n<li>\\n<p>next, error, complete 메소드 제공</p>\\n</li>\\n<li>\\n<p>Error</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 에러가 발생한다면?</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'데이터 전달 도중 에러가 발생했습니다'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">error</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// '데이터 전달 도중 에러가 발생했습니다'</span></code></pre>\\n      </div>\\n<ul>\\n<li>Complete</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">complete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">error</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'데이터 전달 완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span>\\n<span class=\\\"token comment\\\">// '데이터 전달 완료'</span></code></pre>\\n      </div>\\n<ul>\\n<li>Unsubscribe</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> interval$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> id <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">setInterval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 자원을 해제하는 함수</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'interval 제거'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">clearInterval</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> subscription <span class=\\\"token operator\\\">=</span> interval$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  subscription<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unsubscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// 'interval 제거'</span></code></pre>\\n      </div>\\n<h2>1.3 rxjs 네임스페이스에 있는 생성 함수로 Observable 만들기</h2>\\n<blockquote>\\n<p>Best practive\\n가급적 Observable을 생성할 때는 rxjs 네임스페이스에서 제공하는 생성 함수를 사용하자.</p>\\n</blockquote>\\n<ul>\\n<li>of</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">of(values: ...T, scheduler:Scheduler): Observable&lt;T&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">30</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 20</span>\\n<span class=\\\"token comment\\\">// 30</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>range</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">range(start: number, count: number, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> range <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>fromEvent</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">fromEvent(target: EventTargetLike, eventName: string, options: EventListenerOptions, selector: SelectorMethodSignature&lt;T&gt;): Observable&lt;T&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> fromEvent <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> click$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fromEvent</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> subscription <span class=\\\"token operator\\\">=</span> click$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click 이벤트 발생'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>from</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">from(ish: ObservableInput&lt;T&gt;, scheduler: Scheduler): Observable&lt;T&gt;</code></p>\\n<ul>\\n<li>배열, 배열 같은 객체</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">30</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 20</span>\\n<span class=\\\"token comment\\\">// 30</span>\\n<span class=\\\"token comment\\\">// 완료</span>\\n\\n<span class=\\\"token keyword\\\">const</span> arguments$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>arguments<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>Iterable 객체</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> map$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmap$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// [1, 2]</span>\\n<span class=\\\"token comment\\\">// [2, 4]</span>\\n<span class=\\\"token comment\\\">// [4, 8]</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>Promise</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> success$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nsuccess$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 100</span>\\n<span class=\\\"token comment\\\">// 완료</span>\\n\\n<span class=\\\"token keyword\\\">const</span> fail$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'에러'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nfail$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 에러</span></code></pre>\\n      </div>\\n<ul>\\n<li>Interval</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">interval(period: number, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> interval <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">interval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>1.4 특별한 용도의 Observable 만들기</h2>\\n<ul>\\n<li>empty / EMPTY</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">empty(scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">complete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> empty<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">.</span>operators<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">empty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>throwError</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">throwError(error: any, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> throwError<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">.</span>operators<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">throwError</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'number는 0보다 커야한다'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>never / NEVER</li>\\n</ul>\\n<p>아무것도 하지 않는 Observable 생성</p>\\n<p><code class=\\\"language-text\\\">never(scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">NEVER</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>numer <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token constant\\\">NEVER</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>출처 <a href=\\\"https://m.yes24.com/Goods/Detail/62601794\\\">RxJS Quick Start</a></p>\",\"fields\":{\"tagSlugs\":[\"/tags/functional/\",\"/tags/java-script/\",\"/tags/rx-js/\"]},\"frontmatter\":{\"title\":\"[함수형 프로그래밍] RxJS Observable 만들기\",\"tags\":[\"functional\",\"JavaScript\",\"RxJS\"],\"date\":\"2021-05-05T09:15:03.284Z\",\"description\":\"Observable 생성자를 이용하여 Observable 만들기\"}}},\"pathContext\":{\"slug\":\"/posts/Functional/create-observable\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-functional-create-observable-3eee442042e1452c453c.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"BK's Devlog\",\"subtitle\":\"I'm front-end web developer, former brand marketer, interested in business-oriented and scalable development. Also, passionate marathoner.\",\"copyright\":\"powerd by Gatsby, theme by lumen\",\"author\":{\"name\":\"BK\",\"email\":\"beom911@gmail.com\",\"instagram\":\"kim.andrea.by\",\"linkedin\":\"beomyeon-kim-a9b453128\",\"github\":\"beomyeonandrewkim\",\"rss\":\"/rss.xml\",\"facebook\":\"beom911\"},\"disqusShortname\":\"beomyeonandrewkim\",\"url\":\"https://beomyeonandrewkim.github.io\"}},\"markdownRemark\":{\"id\":\"/Users/beomyeonandreakim/Documents/dev/beomyeonandrewkim.github.io/src/pages/articles/2021-05-05_make-observable/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Chapter 02 Observable 만들기</h1>\\n<h2>1.1 Observable 생성자를 이용하여 Observable 만들기</h2>\\n<ul>\\n<li>Observable은 클래스이기에 new 키워드를 객체 생성</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Observable.create도 가능</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span></code></pre>\\n      </div>\\n<h2>1.2 Observable 구현 시 고련해야 할 것들</h2>\\n<ul>\\n<li>\\n<p>Observable은 자신을 구독하고 있는 Observer에게 데이터를 전달하기도 하지만 지금의 상태를 전달하기도 해야함</p>\\n</li>\\n<li>\\n<p>에러가 발생한 경우라면 발생한 에러 정보를 전달하고 데이터를 종료되었다고 하면 데이터 전달이 완료되었다고 Observer에게 전달해야 함.</p>\\n</li>\\n<li>\\n<p>next, error, complete 메소드 제공</p>\\n</li>\\n<li>\\n<p>Error</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 에러가 발생한다면?</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'데이터 전달 도중 에러가 발생했습니다'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">error</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// '데이터 전달 도중 에러가 발생했습니다'</span></code></pre>\\n      </div>\\n<ul>\\n<li>Complete</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> numbers$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">complete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">error</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nnumbers$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'데이터 전달 완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span>\\n<span class=\\\"token comment\\\">// '데이터 전달 완료'</span></code></pre>\\n      </div>\\n<ul>\\n<li>Unsubscribe</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Observable <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> interval$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Observable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>observer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> id <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">setInterval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 자원을 해제하는 함수</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'interval 제거'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">clearInterval</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> subscription <span class=\\\"token operator\\\">=</span> interval$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  subscription<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unsubscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// Date</span>\\n<span class=\\\"token comment\\\">// 'interval 제거'</span></code></pre>\\n      </div>\\n<h2>1.3 rxjs 네임스페이스에 있는 생성 함수로 Observable 만들기</h2>\\n<blockquote>\\n<p>Best practive\\n가급적 Observable을 생성할 때는 rxjs 네임스페이스에서 제공하는 생성 함수를 사용하자.</p>\\n</blockquote>\\n<ul>\\n<li>of</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">of(values: ...T, scheduler:Scheduler): Observable&lt;T&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">30</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 20</span>\\n<span class=\\\"token comment\\\">// 30</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>range</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">range(start: number, count: number, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> range <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>fromEvent</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">fromEvent(target: EventTargetLike, eventName: string, options: EventListenerOptions, selector: SelectorMethodSignature&lt;T&gt;): Observable&lt;T&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> fromEvent <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> click$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fromEvent</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> subscription <span class=\\\"token operator\\\">=</span> click$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> v <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click 이벤트 발생'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> e <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>from</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">from(ish: ObservableInput&lt;T&gt;, scheduler: Scheduler): Observable&lt;T&gt;</code></p>\\n<ul>\\n<li>배열, 배열 같은 객체</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">30</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 10</span>\\n<span class=\\\"token comment\\\">// 20</span>\\n<span class=\\\"token comment\\\">// 30</span>\\n<span class=\\\"token comment\\\">// 완료</span>\\n\\n<span class=\\\"token keyword\\\">const</span> arguments$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>arguments<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 1</span>\\n<span class=\\\"token comment\\\">// 2</span>\\n<span class=\\\"token comment\\\">// 3</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>Iterable 객체</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> map$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmap$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// [1, 2]</span>\\n<span class=\\\"token comment\\\">// [2, 4]</span>\\n<span class=\\\"token comment\\\">// [4, 8]</span>\\n<span class=\\\"token comment\\\">// 완료</span></code></pre>\\n      </div>\\n<ul>\\n<li>Promise</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> success$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nsuccess$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 100</span>\\n<span class=\\\"token comment\\\">// 완료</span>\\n\\n<span class=\\\"token keyword\\\">const</span> fail$ <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span>Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'에러'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nfail$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 에러</span></code></pre>\\n      </div>\\n<ul>\\n<li>Interval</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">interval(period: number, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> interval <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">interval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n  complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>1.4 특별한 용도의 Observable 만들기</h2>\\n<ul>\\n<li>empty / EMPTY</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">empty(scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">complete</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> empty<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">.</span>operators<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">empty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>throwError</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">throwError(error: any, scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  observer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> throwError<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">.</span>operators<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">throwError</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'number는 0보다 커야한다'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li>never / NEVER</li>\\n</ul>\\n<p>아무것도 하지 않는 Observable 생성</p>\\n<p><code class=\\\"language-text\\\">never(scheduler: Scheduler): Observable</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// 내부 구조</span>\\nObservable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>observer <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">NEVER</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">of</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> rxjs<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">of</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>number <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>numer <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token constant\\\">NEVER</span> <span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    next<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>log<span class=\\\"token punctuation\\\">,</span>\\n    error<span class=\\\"token punctuation\\\">:</span> console<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">,</span>\\n    complete<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'완료'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>출처 <a href=\\\"https://m.yes24.com/Goods/Detail/62601794\\\">RxJS Quick Start</a></p>\",\"fields\":{\"tagSlugs\":[\"/tags/functional/\",\"/tags/java-script/\",\"/tags/rx-js/\"]},\"frontmatter\":{\"title\":\"[함수형 프로그래밍] RxJS Observable 만들기\",\"tags\":[\"functional\",\"JavaScript\",\"RxJS\"],\"date\":\"2021-05-05T09:15:03.284Z\",\"description\":\"Observable 생성자를 이용하여 Observable 만들기\"}}},\"pathContext\":{\"slug\":\"/posts/Functional/create-observable\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-functional-create-observable.json\n// module id = 537\n// module chunks = 106592666276714"],"sourceRoot":""}